name: Build IOS App
on:
  push:
    branches: [ main ]
  pull_request:
    types: ['opened', 'synchronize', 'reopened']
    branches: ['main', 'develop', 'feature/**', 'rc/**']
  workflow_dispatch:

jobs:
  build:
    name: Build and Test default scheme using any available iPhone simulator
    runs-on: [self-hosted, main]
    env:
      API_GITHUB_TOKEN: ${{ secrets.API_GITHUB_TOKEN }}
      APPCENTER_API_TOKEN: ${{ secrets.APPCENTER_API_TOKEN }}
      FIGMA_ACCESS_TOKEN: ${{ secrets.FIGMA_ACCESS_TOKEN }}
      TELEGRAM_API_TOKEN: ${{ secrets.TELEGRAM_API_TOKEN }}
      TELEGRAM_DEV_CHAT_ID: ${{ secrets.TELEGRAM_DEV_CHAT_ID }}
      TEST_TOKEN: ${{ secrets.TEST_TOKEN }}
      PUll_NUMBER: ${{ github.event.number }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Environment
        run:  bundle install
      # - name: Start SwiftUI & UIKit tests
      #   run:  bundle exec fastlane run_all_tests
      # - name: Check If Failed
      #   if: ${{ failure() }}
        # run:  bundle exec fastlane send_build_failed_info issue_name:${{ github.head_ref }} telegram_token:"$TELEGRAM_API_TOKEN" telegram_chat_id:"$TELEGRAM_DEV_CHAT_ID" build_url:"$PUll_NUMBER"
      - name: Deploy AppCenter Dev
        if: ${{ github.event_name == 'pull_request' }}
        env:     
          CI_PASSWORD:  ${{ secrets.CI_PASSWORD }}
        run: |
          bundle exec fastlane unlock_secrets_keychain password:"$CI_PASSWORD"
          bundle exec fastlane deploy_appcenter_dev test_token:"$TEST_TOKEN" issue_name:${{ github.head_ref }} pull_request_number:${{ github.event.number }} telegram_token:"$TELEGRAM_API_TOKEN" telegram_chat_id:"$TELEGRAM_DEV_CHAT_ID" 
      - name: Check If Failed
        if: ${{ failure() }}
        run:  bundle exec fastlane send_build_failed_info issue_name:${{ github.head_ref }} telegram_token:"$TELEGRAM_API_TOKEN" telegram_chat_id:"$TELEGRAM_DEV_CHAT_ID" build_url:"$PUll_NUMBER"
      - name: Deploy AppCenter Prod
        if: ${{ github.event_name == 'push' && github.head_ref == 'main' }}
        env:     
          CI_PASSWORD:  ${{ secrets.CI_PASSWORD }}
        run: |
          bundle exec fastlane unlock_secrets_keychain password:"$CI_PASSWORD"
          bundle exec fastlane deploy_appcenter_prod
      - name: Check If Failed
        if: ${{ failure() }}
        run:  bundle exec fastlane send_build_failed_info issue_name:${{ github.head_ref }} telegram_token:"$TELEGRAM_API_TOKEN" telegram_chat_id:"$TELEGRAM_DEV_CHAT_ID" build_url:"$PUll_NUMBER"
      - name: Build XCFrameworks
        if: ${{ github.event_name == 'push' && github.head_ref == 'main' }}
        run: bundle exec fastlane build_git_packages
      - name: Upload Artifacts
        if: ${{ github.event_name == 'push' && github.head_ref == 'main' }}
        uses: actions/upload-artifact@v3
        with:
          name: Artifacts
          path: |
            Products/xcframeworks/AdmiralSwiftUI.xcframework
            Products/xcframeworks/AdmiralUIKit.xcframework
            Products/xcframeworks/AdmiralTheme.xcframework
            Products/xcframeworks/AdmiralUIResources.xcframework

  Push-To-Bitbucket:
    runs-on: [ self-hosted, main ]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Push commit to the mirror
        run: |
          git status
          git fetch --all
          git checkout --track origin/${{ github.head_ref }}
          git push --all --force mirror
          git status




